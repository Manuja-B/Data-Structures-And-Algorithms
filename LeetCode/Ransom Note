Problem: Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom note can be constructed from the magazines ; otherwise, it will return false.

Each letter in the magazine string can only be used once in your ransom note.

Example 1:

Input: ransomNote = "a", magazine = "b"
Output: false
Example 2:

Input: ransomNote = "aa", magazine = "ab"
Output: false
Example 3:

Input: ransomNote = "aa", magazine = "aab"
Output: true
 
Constraints:

You may assume that both strings contain only lowercase letters.

Solution:
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        HashMap<Character, Integer> hm =new HashMap<>();
        for(int i=0; i<magazine.length(); i++)
        {
            int currentCount = hm.getOrDefault(magazine.charAt(i), 0);
            hm.put(magazine.charAt(i), currentCount + 1);
        }
        
        for(int j=0; j<ransomNote.length(); j++)
        {
            int count=hm.getOrDefault(ransomNote.charAt(j), 0);
                if(count==0){
                return false;
                }
                
                hm.put(ransomNote.charAt(j), count-1);
           
           
            
        }
        return true;
    }
}
