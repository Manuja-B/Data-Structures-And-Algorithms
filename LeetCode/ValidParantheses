Problem: Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

Solution:
class Solution {
    public boolean isValid(String s) {
        HashMap<Character, Character> hm=new HashMap<>();
        hm.put(')','(');
        hm.put('}', '{');
        hm.put(']','[');
        char topele=0;
        Stack<Character> stack=new Stack<>();
        if(s.length()==1){
            return false;
        }
        for(int i=0; i<s.length(); i++){
            char c=s.charAt(i);
            if(hm.containsKey(c)){
                
                if(!stack.empty()){
                    topele=stack.pop();
                }
                if(topele!=hm.get(c)){
                    return false;
                }
                
            }
        else{
            stack.push(c);
        }
        }
    return stack.isEmpty();
    }
}
