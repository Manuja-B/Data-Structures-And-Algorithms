Problem: Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:

The number of elements initialized in nums1 and nums2 are m and n respectively.
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.
Example:

Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

Output: [1,2,2,3,5,6]

Solution 1: starting from end
class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int count=m+n-1;
        --m;
        --n;
        while(m>=0 && n>=0){
            if(nums1[m]>nums2[n]){
                nums1[count--]=nums1[m--];
            }
            else{
                nums1[count--]=nums2[n--];
            }
        }
        while(n>=0){
            nums1[count--]=nums2[n--];
        }
    }
}

//Another merge logic --merging into new array
public int[] merge(int[] nums1, int[] nums2){
        int m=nums1.length;
        int n=nums2.length;
        int[] arr=new int[m+n];
        int i=0,j=0,k=0;
        
        while(i<m && j<n){
            if(nums1[i] < nums2[j]){
                arr[k++]=nums1[i];
                i++;
            }
            else{
                arr[k++]=nums2[j];
                j++;
            }
        }
            while(i<m){
                arr[k++]=nums1[i];
                i++;
            }
            while(j<n){
                arr[k++]=nums2[j];
                j++;
            }
            
        
        return arr;
    }
}

