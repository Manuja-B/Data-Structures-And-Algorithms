Problem:
Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:
Input:  [1,2,3,4]
Output: [24,12,8,6]
Constraint: It's guaranteed that the product of the elements of any prefix or suffix of the array (including the whole array) fits in a 32 bit integer.
Note: Please solve it without division and in O(n).

Follow up:
Could you solve it with constant space complexity? (The output array does not count as extra space for the purpose of space complexity analysis.)

Solution:
class Solution {
public int[] productExceptSelf(int[] nums) {
int n = nums.length;
int o[] = new int[nums.length];
for(int i = 0 ; i < n ; i++){
int prod = 1;
for(int j = i+1 ; j < n ; j++){
prod = prod*nums[j];
}

        for(int j = 0 ; j < i ; j++){
            prod = prod*nums[j];
        }
        
        o[i] = prod;
    }
    
    return o;
}
}
